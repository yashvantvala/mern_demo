[{"D:\\MERN\\testfront\\mytodo\\src\\index.js":"1","D:\\MERN\\testfront\\mytodo\\src\\App.js":"2","D:\\MERN\\testfront\\mytodo\\src\\reportWebVitals.js":"3","D:\\MERN\\testfront\\mytodo\\src\\Router.js":"4","D:\\MERN\\testfront\\mytodo\\src\\User.js":"5","D:\\MERN\\testfront\\mytodo\\src\\Notfound.js":"6"},{"size":1064,"mtime":1607874499775,"results":"7","hashOfConfig":"8"},{"size":1938,"mtime":1607869458191,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":166,"mtime":1607872888866,"results":"11","hashOfConfig":"8"},{"size":160,"mtime":1607874235667,"results":"12","hashOfConfig":"8"},{"size":163,"mtime":1607872856221,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4ck7td",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\MERN\\testfront\\mytodo\\src\\index.js",[],"D:\\MERN\\testfront\\mytodo\\src\\App.js",["28"],"import React from 'react';\nimport logo from './lco.png';\nimport './App.css';\n\nclass App extends React.Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnewItem:\"\",\n\t\t\tlist :[]\n\t\t}\n\t}\n\taddItem(todoValue){\n\t\tif(todoValue!==\"\"){\n\t\t\tconst newItem = {\n\t\t\t\tid:Date.now(),\n\t\t\t\tvalue:todoValue,\n\t\t\t\tisDone:false\n\t\t\t};\n\t\t\tconst list = [...this.state.list];\n\t\t\tlist.push(newItem);\n\t\t\t//set state fot set new value\n\t\t\tthis.setState({\n\t\t\t\tlist:list,\n\t\t\t\tnewItem:\"\"\n\t\t\t});\n\t\t}\n\t}\n\n\tdeleteItem(id){\n\t\tconst list = [...this.state.list];\n\t\tconst updatedlist = list.filter(item=>item.id!==id);\n\t\tthis.setState({\n\t\t\tlist:updatedlist,\n\t\t\tnewItem:\"\"\n\t\t});\n\t}\n\tupdateInputs(input){\n\t\tthis.setState({newItem:input});\n\t}\n\t//render for the class\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"main\">\n\t\t\t\t<img src={logo} width=\"100\" height=\"100\" className=\"logo\" />\n\t\t\t\t<h1 className=\"app-title text-center\">My Todo App</h1>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<p className=\"text-center\">Add an item...</p>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<div class=\"flex\">\n\t\t\t\t\t<input type=\"text\" className=\"input-text\" placeholder=\"Write a todo\" required value={this.state.newItem} onChange={e=>this.updateInputs(e.target.value)} />\n\t\t\t\t\t<button className=\"add-btn ml-1\" onClick={()=>this.addItem(this.state.newItem)} disabled={!this.state.newItem.length}>Add Todo</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"list\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t{this.state.list.map(item=>{\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<li key={item.id}>\n\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tname=\"isDone\"\n\t\t\t\t\t\t\t\tchecked={item.isDone}\n\t\t\t\t\t\t\t\tonChange={()=>{}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{item.value}\n\t\t\t\t\t\t\t\t<button className=\"btn ml-1\" onClick={()=>this.deleteItem(item.id)}>Delete</button>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<input type=\"checkbox\" name=\"\"/>\n\t\t\t\t\t\tRecord youtube videos\n\t\t\t\t\t\t<button className=\"btn ml-1\">Delete</button>\n\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App",["29","30"],"D:\\MERN\\testfront\\mytodo\\src\\reportWebVitals.js",[],"D:\\MERN\\testfront\\mytodo\\src\\Router.js",[],"D:\\MERN\\testfront\\mytodo\\src\\User.js",[],"D:\\MERN\\testfront\\mytodo\\src\\Notfound.js",[],{"ruleId":"31","severity":1,"message":"32","line":46,"column":5,"nodeType":"33","endLine":46,"endColumn":65},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-global-assign","no-unsafe-negation"]